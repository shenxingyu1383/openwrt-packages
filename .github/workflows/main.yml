name: Build luci-app-wolplus (OpenWrt 24.10)

on:
  push:
    branches:
      - main  # 当代码推送到 main 分支时触发
  pull_request:
    branches:
      - main  # 当创建一个 pull request 针对 main 分支时触发
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-22.04  # 指定使用 Ubuntu 22.04 运行环境

    steps:
      - name: 检出 OpenWrt 源码（24.10）
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: openwrt-24.10  # 使用 OpenWrt 24.10 版本
          path: openwrt

      - name: 更新和安装 OpenWrt Feeds
        run: |
          cd openwrt
          echo "src-git custom https://github.com/shenxingyu1383/openwrt-packages" >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 安装编译依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            ccache \
            git \
            libncurses5-dev \
            libncursesw5-dev \
            zlib1g-dev \
            gawk \
            flex \
            gettext \
            libssl-dev \
            xsltproc \
            wget \
            unzip \
            python3-distutils \
            python3-pip \
            libtool \
            automake \
            autoconf \
            bash \
            bison \
            curl \
            libsdl1.2-dev \
            python3-setuptools \
            cmake \
            libsqlite3-dev

      - name: 选择 luci-app-wolplus 进行编译
        run: |
          cd openwrt
          make defconfig
          echo "CONFIG_PACKAGE_luci-app-wolplus=m" >> .config
          make defconfig

      - name: 编译 luci-app-wolplus（详细日志）
        run: |
          cd openwrt
          make package/luci-app-wolplus/compile V=s -j$(nproc)

      - name: 检查编译日志（输出所有日志）
        run: |
          cd openwrt
          tail -n 1000 build_dir/target-*/logs/*  # 输出最新1000行日志，方便查看错误

      - name: 打包编译产物
        run: |
          mkdir -p output
          find openwrt/bin/packages/ -name "*.ipk" -exec cp {} output/ \;

      - name: 创建 GitHub Release 并上传 `.ipk` 文件
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          release_name: Latest Build
          draft: false
          prerelease: false
          files: output/*.ipk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
